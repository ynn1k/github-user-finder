class GitHub{constructor(){this.client_id="7c2562f8d574e9141a0a",this.client_secret="a6ff32b7a254218ef73b191b95199a7e8cc91ec9",this.repos_count=5,this.repos_sort="created: asc"}async getUser(e){const s=await fetch(`https://api.github.com/users/${e}?client_id=${this.client_id}&client_secret=${this.client_secret}`),a=await fetch(`https://api.github.com/users/${e}/repos?per_page=${this.repos_count}&sort=${this.repos_sort}&client_id=${this.client_id}&client_secret=${this.client_secret}`);return{profile:await s.json(),repos:await a.json()}}}class Ui{constructor(){this.profile=document.querySelector("#profile")}showProfile(e){this.profile.innerHTML=`\n            <div class="card card-body mb-3">\n                <div class="row">\n                    <div class="col-12">\n                        <h2 class="mb-3">\n                            ${e.name}\n                        </h2>\n                    </div>\n                    <div class="col-md-3">\n                        <img src="${e.avatar_url}" alt="" class="img-fluid mb-2 rounded-lg">\n                        <a href="${e.html_url}" target="_blank" class="btn btn-primary btn-block">View Profile</a>\n                        <small class="mb-2">Updated: ${e.updated_at}</small>\n                    </div>\n                    <div class="col-md-9">\n                        <span class="badge badge-primary">Public Repos: ${e.public_repos}</span>\n                        <span class="badge badge-secondary">Public Gists: ${e.public_gists}</span>\n                        <span class="badge badge-success">Follower: ${e.followers}</span>\n                        <span class="badge badge-info">Following: ${e.following}</span>\n                        <p>\n                            ${e.bio}\n                        </p>\n                        <ul class="list-group">\n                            <li class="list-group-item">Company: ${e.company}</li>\n                            <li class="list-group-item">Website: <a href="${e.blog}" target="_blank">${e.blog}</a></li>\n                            <li class="list-group-item">E-Mail: <a href="mailto:${e.email}">${e.email}</a></li>\n                            <li class="list-group-item">Location: ${e.location}</li>\n                            <li class="list-group-item">Member since: ${e.created_at}</li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <h3 class="page-heading mb-3">Latest Repos</h3>\n            <div id="repos"></div>\n        `}showRepos(e){let s="";e.forEach(e=>{s+=`\n                <div class="card card-body mb-2">\n                    <div class="row">\n                        <div class="col-md-7">\n                            <a href="${e.html_url}">${e.name}</a>\n                        </div>\n                        <div class="col-md-5 text-right">\n                            <span class="badge badge-primary">Stars: ${e.stargazers_count}</span>\n                            <span class="badge badge-secondary">Watchers: ${e.watchers_count}</span>\n                            <span class="badge badge-success">Forks: ${e.forks_count}</span>\n                        </div>\n                    </div>\n                </div>\n            `}),document.querySelector("#repos").innerHTML=s}showAlert(e,s){this.clearAlert();const a=document.createElement("div");a.className=s,a.appendChild(document.createTextNode(e));const t=document.querySelector(".searchContainer"),i=document.querySelector(".search");t.insertBefore(a,i),setTimeout(()=>{this.clearAlert()},3e3)}clearAlert(){const e=document.querySelector(".alert");e&&e.remove()}clearProfile(){this.profile.innerHTML=""}}const github=new GitHub,ui=new Ui,searchUser=document.querySelector("#searchUser");searchUser.addEventListener("keyup",e=>{const s=e.target.value;""!==s?github.getUser(s).then(e=>{"Not Found"===e.profile.message?ui.showAlert("User not found","alert alert-danger"):(ui.showProfile(e.profile),ui.showRepos(e.repos))}):ui.clearProfile()});